#!/usr/bin/env python3
"""
Test script to verify booking date functionality
"""

import sys
sys.path.append('.')

from datetime import datetime, timedelta, timezone
import pytz

# Recreate the logic to test
BOOK_TZ = pytz.timezone('Europe/Moscow')

def test_booking_date_logic():
    today = datetime.now(BOOK_TZ).date()
    dates = [today + timedelta(days=i) for i in range(1, 31)]  # —Å 1 –¥–Ω—è (–∑–∞–≤—Ç—Ä–∞) –Ω–∞ 30 –¥–Ω–µ–π –≤–ø–µ—Ä–µ–¥
    
    print(f"üóìÔ∏è  –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {today.strftime('%d.%m.%Y')}")
    print(f"üìÖ –ü–µ—Ä–≤—ã–µ 10 –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏:")
    
    for i, d in enumerate(dates[:10], 1):
        print(f"  {i:2d}. {d.strftime('%d.%m.%Y')} ({d.strftime('%A')})")
    
    # Verify first date is tomorrow
    tomorrow = today + timedelta(days=1)
    if dates[0] == tomorrow:
        print(f"\n‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –ø–µ—Ä–≤–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –¥–∞—Ç–∞ = {tomorrow.strftime('%d.%m.%Y')} (–∑–∞–≤—Ç—Ä–∞)")
    else:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–≤–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –¥–∞—Ç–∞ = {dates[0].strftime('%d.%m.%Y')}, –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å {tomorrow.strftime('%d.%m.%Y')}")
    
    # Check if today is NOT included
    if today not in dates:
        print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ {today.strftime('%d.%m.%Y')} –ù–ï –≤–∫–ª—é—á–µ–Ω–∞")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ {today.strftime('%d.%m.%Y')} –≤–∫–ª—é—á–µ–Ω–∞ (–Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å)")

if __name__ == "__main__":
    test_booking_date_logic()