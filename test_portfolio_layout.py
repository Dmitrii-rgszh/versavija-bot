#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.
–î–ª–∏–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–ª–∂–Ω—ã —Ä–∞–∑–º–µ—â–∞—Ç—å—Å—è –ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ.
"""

import sys
import os

# Add the current directory to Python path to import modules
sys.path.insert(0, os.getcwd())

from keyboards import build_portfolio_keyboard

def test_portfolio_keyboard_layout():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ)
    test_categories = [
        {"text": "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω–∞—è", "slug": "family"},
        {"text": "üíï Love Story", "slug": "love_story"},
        {"text": "üë§ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è", "slug": "personal"},
        {"text": "üéâ –†–µ–ø–æ—Ä—Ç–∞–∂–Ω–∞—è (–±–∞–Ω–∫–µ—Ç—ã, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è)", "slug": "reportage"},  # –î–ª–∏–Ω–Ω–∞—è
        {"text": "üíç –°–≤–∞–¥–µ–±–Ω–∞—è", "slug": "wedding"},
        {"text": "üíã Lingerie (–±—É–¥—É–∞—Ä–Ω–∞—è)", "slug": "lingerie"},  # –î–ª–∏–Ω–Ω–∞—è
        {"text": "üë∂ –î–µ—Ç—Å–∫–∞—è (—à–∫–æ–ª—ã/—Å–∞–¥–∏–∫–∏)", "slug": "children"},
        {"text": "üë©‚Äçüë∂ –ú–∞–º–∞ —Å —Ä–µ–±—ë–Ω–∫–æ–º", "slug": "mom_child"},
    ]
    
    kb = build_portfolio_keyboard(test_categories, is_admin=False)
    
    print("üîç –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ:")
    print("-" * 50)
    
    issues = []
    single_button_rows = []
    
    for i, row in enumerate(kb.inline_keyboard):
        row_texts = [btn.text for btn in row]
        
        print(f"–°—Ç—Ä–æ–∫–∞ {i+1}: {len(row)} –∫–Ω–æ–ø–æ–∫ - {row_texts}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        for btn_text in row_texts:
            if "–†–µ–ø–æ—Ä—Ç–∞–∂–Ω–∞—è (–±–∞–Ω–∫–µ—Ç—ã, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è)" in btn_text:
                if len(row) > 1:
                    issues.append(f"'–†–µ–ø–æ—Ä—Ç–∞–∂–Ω–∞—è (–±–∞–Ω–∫–µ—Ç—ã, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è)' –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ {i+1}")
                else:
                    single_button_rows.append(btn_text)
                    
            if "Lingerie (–±—É–¥—É–∞—Ä–Ω–∞—è)" in btn_text:
                if len(row) > 1:
                    issues.append(f"'Lingerie (–±—É–¥—É–∞—Ä–Ω–∞—è)' –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ {i+1}")
                else:
                    single_button_rows.append(btn_text)
                    
            if "–î–µ—Ç—Å–∫–∞—è (—à–∫–æ–ª—ã/—Å–∞–¥–∏–∫–∏)" in btn_text:
                if len(row) > 1:
                    issues.append(f"'–î–µ—Ç—Å–∫–∞—è (—à–∫–æ–ª—ã/—Å–∞–¥–∏–∫–∏)' –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ {i+1}")
                else:
                    single_button_rows.append(btn_text)
                    
            if "–ú–∞–º–∞ —Å —Ä–µ–±—ë–Ω–∫–æ–º" in btn_text:
                if len(row) > 1:
                    issues.append(f"'–ú–∞–º–∞ —Å —Ä–µ–±—ë–Ω–∫–æ–º' –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–¥–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ {i+1}")
                else:
                    single_button_rows.append(btn_text)
    
    print("-" * 50)
    
    if single_button_rows:
        print("‚úÖ –î–ª–∏–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Ä–∞–∑–º–µ—â–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ (–ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ):")
        for btn in single_button_rows:
            print(f"  ‚Ä¢ {btn}")
    
    if issues:
        print(f"\n‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ–º ({len(issues)}):")
        for issue in issues:
            print(f"  ‚Ä¢ {issue}")
        return False
    else:
        print("\n‚úÖ –í—Å–µ –¥–ª–∏–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Ä–∞–∑–º–µ—â–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—â–∏–π –≤–∏–¥
        total_buttons = sum(len(row) for row in kb.inline_keyboard if not any("‚óÄÔ∏è" in btn.text or "‚ñ∂Ô∏è" in btn.text or "–°—Ç—Ä" in btn.text or "–ù–∞–∑–∞–¥" in btn.text or "–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è" in btn.text for btn in row))
        expected_buttons = len(test_categories)
        
        if total_buttons == expected_buttons:
            print(f"‚úÖ –í—Å–µ {expected_buttons} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã")
        else:
            print(f"‚ö†Ô∏è –û—Ç–æ–±—Ä–∞–∂–µ–Ω–æ {total_buttons} –∏–∑ {expected_buttons} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        
        return True

if __name__ == "__main__":
    success = test_portfolio_keyboard_layout()
    sys.exit(0 if success else 1)