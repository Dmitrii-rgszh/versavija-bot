#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–æ–≤—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≥—Ä—É–ø–ø—ã.
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
"""

import random
import asyncio
import logging
import json
from pathlib import Path
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import F
from config import bot, dp
from db import get_setting, set_setting

# ID —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
TARGET_GROUP_ID = -1002553563891  # Versavija_test_group

DEFAULT_WELCOME_MESSAGES = [
    "üåü **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –¥—Ä—É–∂–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é!** üåü\n–ü—Ä–∏–≤–µ—Ç! –Ø –í–µ—Ä—Å–∞–≤–∏—è - —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à–∏ —Å–∞–º—ã–µ —è—Ä–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã! üì∏‚ú® –†–∞–¥–∞ –≤–∏–¥–µ—Ç—å –≤–∞—Å –∑–¥–µ—Å—å!",
    "üëã **–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, –Ω–æ–≤—ã–π –¥—Ä—É–≥!** üëã\n–ö–∞–∫ –∑–¥–æ—Ä–æ–≤–æ, —á—Ç–æ –≤—ã –∫ –Ω–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å! ü•≥ –Ø –í–µ—Ä—Å–∞–≤–∏—è, –∏ —è —Å–æ–∑–¥–∞—é –≤–æ–ª—à–µ–±–Ω—ã–µ –∫–∞–¥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è —Å –≤–∞–º–∏ –Ω–∞–≤—Å–µ–≥–¥–∞! üì∑üí´",
    "üéâ **–£—Ä–∞! –£ –Ω–∞—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ!** üéâ\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ú–µ–Ω—è –∑–æ–≤—É—Ç –í–µ—Ä—Å–∞–≤–∏—è, –∏ —è –æ–±–æ–∂–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å! üì∏ –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ –∫—Ä–∞—Å–∏–≤—ã–µ –∫–∞–¥—Ä—ã! üåà",
    "üíù **–¢—ë–ø–ª—ã–π –ø—Ä–∏—ë–º –¥–ª—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞!** üíù\n–ü—Ä–∏–≤–µ—Ç! –í–µ—Ä—Å–∞–≤–∏—è –Ω–∞ —Å–≤—è–∑–∏! üòä –†–∞–¥–∞, —á—Ç–æ –Ω–∞—à–∞ —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è —Å–µ–º—å—è —Å—Ç–∞–ª–∞ –±–æ–ª—å—à–µ! –í–º–µ—Å—Ç–µ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –º–æ–º–µ–Ω—Ç—ã! üì∏‚ú®",
    "üå∏ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö —Å–Ω–∏–º–∫–æ–≤!** üå∏\n–ü—Ä–∏–≤–µ—Ç! –Ø –í–µ—Ä—Å–∞–≤–∏—è - –≤–∞—à –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏! üì∑ –ó–¥–µ—Å—å –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä - —ç—Ç–æ –∏—Å—Ç–æ—Ä–∏—è! –†–∞–¥–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É! üòç",
    "üöÄ **–ù–æ–≤–æ–µ –ª–∏—Ü–æ –≤ –Ω–∞—à–µ–π –≥–∞–ª–µ—Ä–µ–µ!** üöÄ\n–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –í–µ—Ä—Å–∞–≤–∏—è –∑–¥–µ—Å—å! üëã –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! –í–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ! üì∏üíé",
    "ü¶ã **–ö–∞–∫–∞—è –ø—Ä–∏—è—Ç–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞!** ü¶ã\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–µ—Ä—Å–∞–≤–∏—è —Ä–∞–¥–∞ –Ω–æ–≤–æ–º—É –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É! üòä –ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ - —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ —Ä–æ–∂–¥–∞—é—Ç—Å—è —Å–∞–º—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è! üì∑üåü",
    "üé® **–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ!** üé®\n–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –í–µ—Ä—Å–∞–≤–∏—è, –∏ —è –±–µ–∑—É–º–Ω–æ –ª—é–±–ª—é —Å–≤–æ—ë –¥–µ–ª–æ! üì∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —É—é—Ç–Ω—ã–π —É–≥–æ–ª–æ–∫ –∫—Ä–∞—Å–æ—Ç—ã –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è! ‚ú®",
    "üå∫ **–°–µ—Ä–¥–µ—á–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º!** üå∫\n–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! –í–µ—Ä—Å–∞–≤–∏—è –Ω–∞ —Å–≤—è–∑–∏! üëã –¢–∞–∫ —Ä–∞–¥–∞, —á—Ç–æ –≤—ã –∑–¥–µ—Å—å! –í–º–µ—Å—Ç–µ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤! üì∑üíï",
    "üé™ **–ü—Ä–∞–∑–¥–Ω–∏–∫ –∫ –Ω–∞–º –ø—Ä–∏—à—ë–ª!** üé™\n–£—Ä–∞! –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫! ü•≥ –í–µ—Ä—Å–∞–≤–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—Å! –ó–¥–µ—Å—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–µ—á–∞—Ç–ª–µ—Ç—å —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ! üì∏üåà"
]

def _load_messages_from_json() -> list[str]:
    path = Path(__file__).parent / 'media' / 'welcome_messages.json'
    try:
        with path.open('r', encoding='utf-8') as f:
            data = json.load(f)
        if isinstance(data, list) and all(isinstance(x, str) for x in data) and data:
            return data
        logging.warning("welcome_messages.json –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    except FileNotFoundError:
        logging.warning("welcome_messages.json –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    except Exception as e:
        logging.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å welcome_messages.json: %s ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", e)
    return DEFAULT_WELCOME_MESSAGES

WELCOME_MESSAGES = _load_messages_from_json()

def _choose_welcome_text() -> str:
    msgs = list(WELCOME_MESSAGES)
    if not msgs:
        return random.choice(DEFAULT_WELCOME_MESSAGES)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–∞–∫ —Å–∞–º–∏ —Ç–µ–∫—Å—Ç—ã)
    try:
        raw = get_setting('welcome_recent_texts', '') or ''
        recent = [s for s in raw.split('\n') if s]
    except Exception:
        recent = []

    # –§–∏–ª—å—Ç—Ä—É–µ–º, –∏–∑–±–µ–≥–∞—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–æ 5
    block = set(recent[-5:]) if recent else set()
    pool = [m for m in msgs if m not in block] or msgs

    choice = random.choice(pool)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö (–Ω–µ –±–æ–ª–µ–µ 10 —Ö—Ä–∞–Ω–∏–º –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞)
    try:
        updated = (recent + [choice])[-10:]
        set_setting('welcome_recent_texts', '\n'.join(updated))
    except Exception:
        pass
    return choice


async def send_welcome_message(chat_id: int, new_members: list):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π 30 —Å–µ–∫—É–Ω–¥.
    
    Args:
        chat_id: ID –≥—Ä—É–ø–ø—ã/–∫–∞–Ω–∞–ª–∞
        new_members: –°–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    """
    try:
        # –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        await asyncio.sleep(30)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥–æ–º—É –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É
        for member in new_members:
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
            welcome_text = _choose_welcome_text()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if member.username:
                user_mention = f"@{member.username}"
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç username, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
                user_mention = f"[{member.full_name}](tg://user?id={member.id})"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –Ω–∞—á–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            personalized_message = f"{user_mention}, {welcome_text}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
            await bot.send_message(
                chat_id=chat_id,
                text=personalized_message,
                parse_mode="Markdown"
            )
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, –µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ
            if len(new_members) > 1:
                await asyncio.sleep(2)
        
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {len(new_members)} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É {chat_id}")
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@dp.message(F.new_chat_members)
async def handle_new_members(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫ –≥—Ä—É–ø–ø–µ.
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π.
    """
    logging.info(f"üì® –°–û–ë–´–¢–ò–ï: new_chat_members –≤ —á–∞—Ç–µ {message.chat.id} ({message.chat.type})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    if (message.chat.id == TARGET_GROUP_ID and 
        message.new_chat_members and 
        len(message.new_chat_members) > 0):
        
        new_members = message.new_chat_members
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –±–æ—Ç–æ–≤ (–Ω–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –±–æ—Ç–æ–≤)
        human_members = [member for member in new_members if not member.is_bot]
        
        if human_members:
            logging.info(f"–ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≤ –≥—Ä—É–ø–ø–µ {message.chat.title}: {[m.full_name for m in human_members]}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤ —Ñ–æ–Ω–µ
            asyncio.create_task(
                send_welcome_message(message.chat.id, human_members)
            )
        else:
            logging.info("–ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ - –±–æ—Ç—ã, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è")
    else:
        if message.chat.id != TARGET_GROUP_ID:
            logging.info(f"–°–æ–±—ã—Ç–∏–µ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —á–∞—Ç–∞: {message.chat.id} (—Ü–µ–ª–µ–≤–æ–π: {TARGET_GROUP_ID})")


# –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
@dp.message()
async def debug_all_messages(message: Message):
    """–û—Ç–ª–∞–¥–æ—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ - –ª–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Ü–µ–ª–µ–≤–æ–≥–æ —á–∞—Ç–∞"""
    if message.chat.id == TARGET_GROUP_ID:
        logging.info(f"üì® –û–¢–õ–ê–î–ö–ê: –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤–æ–º —á–∞—Ç–µ {message.chat.id}")
        logging.info(f"   –¢–∏–ø —á–∞—Ç–∞: {message.chat.type}")
        logging.info(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {message.chat.title}")
        logging.info(f"   –ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏: {message.new_chat_members}")
        logging.info(f"   –ü–æ–∫–∏–Ω—É–≤—à–∏–µ: {message.left_chat_member}")
        logging.info(f"   –¢–µ–∫—Å—Ç: {message.text and message.text[:50]}")


# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
@dp.message(Command(commands=['welcome']))
async def manual_welcome_command(message: Message):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.
    –†–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±—ã—Ö —á–∞—Ç–∞—Ö, –≤–∫–ª—é—á–∞—è –∫–∞–Ω–∞–ª—ã.
    """
    try:
        # –í—ã–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5
        welcome_text = _choose_welcome_text()

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ
        user = message.from_user
        if user.username:
            user_mention = f"@{user.username}"
        else:
            user_mention = f"[{user.full_name}](tg://user?id={user.id})"

        personalized_message = f"{user_mention}, {welcome_text}"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        await message.reply(
            text=personalized_message,
            parse_mode="Markdown"
        )

        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.full_name} –≤ —á–∞—Ç–µ {message.chat.id}")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /welcome: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üòî")


def setup_welcome_handlers():
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞.
    """
    logging.info(f"–ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≥—Ä—É–ø–ø—ã ID: {TARGET_GROUP_ID}")
    logging.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(WELCOME_MESSAGES)} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∏—Å—Ç–æ—á–Ω–∏–∫: JSON –∏–ª–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fallback)")
    logging.info("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    logging.info("  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –≥—Ä—É–ø–ø–∞—Ö/—Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞—Ö")
    logging.info("  ‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /welcome –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è")
    logging.info("  ‚Ä¢ –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π")
    
    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ —Ç–∏–ø–µ —Ü–µ–ª–µ–≤–æ–≥–æ —á–∞—Ç–∞
    if str(TARGET_GROUP_ID).startswith("-100"):
        logging.info("  ‚ö†Ô∏è ID —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—É/–∫–∞–Ω–∞–ª - —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –ì–†–£–ü–ü–ê!")
    logging.info(f"  üìä –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º 'üì® –û–¢–õ–ê–î–ö–ê'")
    
    return True


if __name__ == "__main__":
    # –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è
    print("–ú–æ–¥—É–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω")
    print(f"–¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {TARGET_GROUP_ID}")
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(WELCOME_MESSAGES)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–¥–Ω–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    print(f"\n–ü—Ä–∏–º–µ—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:")
    print(random.choice(WELCOME_MESSAGES))